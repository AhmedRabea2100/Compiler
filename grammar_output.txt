ASSIGNMENT --> id assign EXPRESSION ; 
DECLARATION --> PRIMITIVE_TYPE id ; 
EXPRESSION --> SIMPLE_EXPRESSION EXPRESSION0 
EXPRESSION0 --> relop SIMPLE_EXPRESSION  | \L 
FACTOR --> id  | num  | ( EXPRESSION ) 
IF --> if ( EXPRESSION ) { STATEMENT } else { STATEMENT } 
METHOD_BODY --> STATEMENT_LIST 
PRIMITIVE_TYPE --> int  | float 
SIGN --> addop 
SIMPLE_EXPRESSION --> TERM SIMPLE_EXPRESSION0  | addop TERM SIMPLE_EXPRESSION0 
SIMPLE_EXPRESSION0 --> addop TERM SIMPLE_EXPRESSION0  | \L 
STATEMENT --> DECLARATION  | IF  | WHILE  | ASSIGNMENT 
STATEMENT_LIST --> DECLARATION STATEMENT_LIST0  | IF STATEMENT_LIST0  | WHILE STATEMENT_LIST0  | ASSIGNMENT STATEMENT_LIST0 
STATEMENT_LIST0 --> STATEMENT STATEMENT_LIST0  | \L 
TERM --> id TERM0  | num TERM0  | ( EXPRESSION ) TERM0 
TERM0 --> mulop FACTOR TERM0  | \L 
WHILE --> while ( EXPRESSION ) { STATEMENT } 
