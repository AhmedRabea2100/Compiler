METHOD_BODY ----> STATEMENT_LIST
STATEMENT_LIST ----> DECLARATION STATEMENT_LIST0
DECLARATION ----> PRIMITIVE_TYPE id ;
PRIMITIVE_TYPE ----> int
Matched int
Matched sum
Matched ;
STATEMENT_LIST0 ----> STATEMENT STATEMENT_LIST0
STATEMENT ----> DECLARATION
DECLARATION ----> PRIMITIVE_TYPE id ;
PRIMITIVE_TYPE ----> int
Matched int
Matched count
Matched ;
STATEMENT_LIST0 ----> STATEMENT STATEMENT_LIST0
STATEMENT ----> DECLARATION
DECLARATION ----> PRIMITIVE_TYPE id ;
PRIMITIVE_TYPE ----> float
Matched float
Matched pass
Matched ;
STATEMENT_LIST0 ----> STATEMENT STATEMENT_LIST0
STATEMENT ----> DECLARATION
DECLARATION ----> PRIMITIVE_TYPE id ;
PRIMITIVE_TYPE ----> int
Matched int
Matched mnt
Matched ;
STATEMENT_LIST0 ----> STATEMENT STATEMENT_LIST0
STATEMENT ----> WHILE
WHILE ----> while ( EXPRESSION ) { STATEMENT }
Matched while
Matched (
EXPRESSION ----> SIMPLE_EXPRESSION EXPRESSION0
SIMPLE_EXPRESSION ----> TERM SIMPLE_EXPRESSION0
TERM ----> id TERM0
Matched pass
TERM0 ----> \L
SIMPLE_EXPRESSION0 ----> \L
EXPRESSION0 ----> relop SIMPLE_EXPRESSION
Matched !=
SIMPLE_EXPRESSION ----> TERM SIMPLE_EXPRESSION0
TERM ----> num TERM0
Matched 10
TERM0 ----> \L
SIMPLE_EXPRESSION0 ----> \L
Matched )
Matched {
STATEMENT ----> ASSIGNMENT
ASSIGNMENT ----> id assign EXPRESSION ;
Matched pass
Matched =
EXPRESSION ----> SIMPLE_EXPRESSION EXPRESSION0
SIMPLE_EXPRESSION ----> TERM SIMPLE_EXPRESSION0
TERM ----> id TERM0
Matched pass
TERM0 ----> \L
SIMPLE_EXPRESSION0 ----> addop TERM SIMPLE_EXPRESSION0
Matched +
TERM ----> num TERM0
Matched 1
TERM0 ----> \L
SIMPLE_EXPRESSION0 ----> \L
EXPRESSION0 ----> \L
Matched ;
Matched }
STATEMENT_LIST0 ----> \L
FINISHED MATCHING
